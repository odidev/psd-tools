name: PyPI Deployment

on:
  release:
    types: [created]

jobs:
  sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist
        twine upload --skip-existing dist/*
  bdist_manylinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - quay.io/pypa/manylinux2014_x86_64
        python-version:
          - cp36-cp36m
          - cp37-cp37m
          - cp38-cp38
          - cp39-cp39
    container: ${{ matrix.container }}
    steps:
    - uses: actions/checkout@v1
    - name: Set PATH
      run: echo "/opt/python/${{ matrix.python-version }}/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cython wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip wheel . -w dist/ --no-deps
        auditwheel repair dist/*.whl --plat $AUDITWHEEL_PLAT
        twine upload --skip-existing wheelhouse/*
  bdist_manylinux_aarch64:
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build Wheel
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            python -m pip install --upgrade pip && \
            pip install cython wheel twine && \
            pip wheel . -w dist/ --no-deps && \
            auditwheel repair dist/*.whl --plat $AUDITWHEEL_PLAT && \
            twine upload --skip-existing wheelhouse/* && \
            deactivate'
  bdist_other:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set PATH  # See actions/virtual-environments#294
      run: echo "C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      if: runner.os == 'Windows'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cython wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip wheel . -w dist/ --no-deps
        twine upload --skip-existing dist/*
